{"version":3,"sources":["api/api.js","components/Users/users.module.css","hoc/WithAuthRedirect.js","components/Navbar/Navbar.module.css","serviceWorker.js","redux/sidebar-reducer.js","utils/objectHelpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/common/Paginator/Paginator.js","assets/images/user.jpg","components/Users/User.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.js","hoc/WithSuspence.js","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/preloader/Preloader.js","components/common/FormsControls/FormsControls.js","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","assets/images/preloader.svg","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Boolean","window","location","hostname","match","initialState","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","foolowUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","followed","filter","id","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","SET_INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","s","nav","item","activeClassName","active","News","Settings","Music","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","selectedPage","pageNumber","key","e","Users","user","src","photos","small","userPhoto","alt","disabled","some","name","User","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Preloader","page","totalCount","bind","Header","header","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","style","formSummaryError","messages","length","stopSubmit","_error","formData","withSuspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","path","render","Login","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","preloader","FormControl","input","meta","hasError","touched","formControl","children","Textarea","restProps","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","postsData","likesCount","profile","addPostActionCreater","newPostText","setStatus","getUserProfile","newPost","postId","SEND_MESSAGE","dialogsData","messagesData","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.1d093faf.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"4a5f6eb5-668d-4a1b-87f0-1e30175593bb\",\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please use profileAPI object\")\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {\r\n            status: status,\r\n        });\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2yQXR\"};","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2kEM-\",\"item\":\"Navbar_item__2lcnH\",\"active\":\"Navbar_active__8Tk__\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {\r\n                ...u,\r\n                ...newObjProps\r\n            }\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId, 'id',{followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId, 'id',{followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst foolowUnfollowFlow = async (dispatch, userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        foolowUnfollowFlow(dispatch, userId,usersAPI.follow.bind(usersAPI),followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        foolowUnfollowFlow(dispatch, userId,usersAPI.unfollow.bind(usersAPI),unfollowSuccess);\r\n    }\r\n}\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\"\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: response.data.messages}));\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let responce = await authAPI.logout();\r\n    if (responce.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = \"SET_INITIALIZED_SUCCESS\"\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: SET_INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then((a) => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/news\" activeClassName={s.active}>News</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink></div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>News</div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>Settings</div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>Music</div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={(currentPage === p && styles.selectedPage) + \" \" + styles.pageNumber}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.4bcd9e2b.jpg\";","import styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = ({user, followingInProgress,follow,unfollow}) => {\r\n    return <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}><img\r\n                                src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\"\r\n                                className={styles.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed ?\r\n                                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                    unfollow(user.id);\r\n                                }}>Unfollow</button>\r\n                                : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                    follow(user.id);\r\n                                }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.name}</div><div>user.status</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"u.location.country\"}</div>\r\n                            <div>{\"u.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, onPageChanged,totalUsersCount,pageSize,users,follow,unfollow,followingInProgress, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        {\r\n            users.map(u => <User user={u} \r\n                                 key={u.id}\r\n                                 followingInProgress={followingInProgress}\r\n                                 follow={follow}\r\n                                 unfollow={unfollow}/>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n// export const getUsersSuper = createSelector(getUsers,(users) => {\r\n//     return users.filter(u => true);\r\n// });\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    followSuccess, requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress, unfollow,\r\n    unfollowSuccess\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport preloader from \"../../assets/images/preloader.svg\"\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            followSuccess,\r\n            unfollowSuccess,\r\n            setCurrentPage,\r\n            toggleFollowingProgress,\r\n            getUsers: requestUsers,\r\n            follow,\r\n            unfollow,\r\n        }\r\n))(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://is5-ssl.mzstatic.com/image/thumb/Purple124/v4/b6/c3/cb/b6c3cb54-5fd6-3d1f-7b13-255aa6e56b3e/AppIcon-0-0-1x_U007emarketing-0-0-0-7-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/1200x630wa.png\" alt=\"\" />\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth \r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> \r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n                \r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n ","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {authAPI} from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required]} type={\"password\"}/>\r\n            </div>\r\n            <div>\r\n                <Field type=\"checkbox\" name={\"rememberMe\"} component={Input}/> remember me\r\n            </div>\r\n            { error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email,formData.password, formData.rememberMe);\r\n    };\r\n    \r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    \r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, {Suspense} from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return(props) => {\r\n        return <Suspense fallback={<div>...Loading</div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Route,withRouter} from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport Music from './components/Music/Music';\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/WithSuspence\";\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n                <div className=\"app-wrapper\">\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className=\"app-wrapper-content\">\r\n                        <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\r\n                        <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\r\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/news\" component={News}/>\r\n                        <Route path=\"/settings\" component={Settings}/>\r\n                        <Route path=\"/music\" component={Music}/>\r\n                        <Route path=\"/login\" component={Login}/>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\nlet AppContainer = compose( \r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <Provider store={store}>\r\n        <BrowserRouter>\r\n            <AppContainer/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n}\r\n\r\nexport default SamuraiJSApp;","import './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <SamuraiJSApp/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2OetQ\",\"error\":\"FormsControls_error__3ZF2C\",\"formSummaryError\":\"FormsControls_formSummaryError__3UW8T\"};","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return <div><img src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2vxm6\",\"loginBlock\":\"Header_loginBlock__1j_Fh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3qzJ5\",\"pageNumber\":\"Paginator_pageNumber__o5VID\",\"selectedPage\":\"Paginator_selectedPage__6QOWM\"};","export const required = value => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return 'Field id required';\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/preloader.7aee2325.svg\";","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 10},\r\n        {id: 2, message: \"It's my first post\", likesCount: 23},\r\n        {id: 3, message: \"asdfg\", likesCount: 23},\r\n        {id: 4, message: \"dghd\", likesCount: 23},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\",\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state, postsData: state.postsData.filter(p => p.id != action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreater = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    return usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n};\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    return profileAPI.getStatus(userId).then(response => {\r\n        dispatch(setStatus(response.data));\r\n    });\r\n};\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    return profileAPI.updateStatus(status).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    });\r\n};\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andrey\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Viktor\"},\r\n        {id: 6, name: \"Valera\"},\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n        {id: 6, message: \"Yo\"},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}